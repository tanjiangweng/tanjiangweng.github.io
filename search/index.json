[{"content":"git学习笔记 git常用命令 1.配置个人信息 1 2 git config --global user.name \u0026#34;你的名字\u0026#34; git congig --global user.email \u0026#34;你的邮箱\u0026#34; [!NOTE]\n设置“署名”，每次提交时都会标明是谁的贡献\n2.SSH配置 生成ssh密钥 1 ssh-keygen -t rsa -C \u0026#34;你的邮箱\u0026#34; ==-t rsa:==:使用RSA算法生成密钥 ==-C==：添加备注，通常是你的邮箱地址（） 添加公钥到远程仓库 github gitee 测试连接\n1 2 ssh -T git@github.com ssh -T git@gitee.com 配置多个 SSH 密钥（可选）\n如果同时使⽤ GitHub 和 Gitee，可以为它们配置不同的 SSH 密钥。\n在 ~/.ssh/config ⽂件中添加以下内容：\n1 2 3 4 5 6 7 8 Host github.com HostName github.com User git IdentityFile ~/.ssh/id_rsa Host gitee.com HostName gitee.com User git IdentityFile ~/.ssh/id_rsa_gitee git实际操作指令 初始化仓库 1 2 3 4 5 6 7 8 9 10 11 git init --初始化仓库 新建一本“时光机日记本”，准备开始记录代码版本。 git add 文件名 --添加文件到暂存区 把草稿整理好，发到准备提交的草稿箱里面 git commit -m \u0026#34;提交说明/注释\u0026#34; --提交到本地仓库 把草稿正式写入日记本，并附上说明 git push origin 分支名 --推送代码到远程仓库 把本地代码同步到远程仓库 git clone 仓库地址 --克隆远程仓库 下载别人的仓库到本地 git status --查看状态 检查当前代码的变化情况 git log --查看提交历史 查看代码的提交记录，回顾开发的时间线 git branch 分支名 --创建分支 为不同功能开发创建独立章节，不干扰主线内容 git checkout 分支名 --切换分支 从一个部门换到另一个部门 git merge 分支名 --合并分支 把不同章节的内容合并到主线 git pull origin 分支名 --拉取代码 从远程仓库拉取最新代码 以下是便于复制的区域\n1 2 3 4 5 6 7 8 9 10 11 git init git add 文件名 git commit -m \u0026#34;提交说明/注释\u0026#34; git push origin 分支名 git clone 仓库地址 git status git log git branch 分支名 git checkout 分支名 git merge 分支名 git pull origin 分支名 以下是对这些常见Git命令的详细解读：\n1. git init 作用：初始化一个新的Git仓库。 解释：此命令会在当前目录下创建一个 .git 目录，这个目录包含了Git的所有版本控制信息。执行 git init 后，当前目录就变成了一个Git仓库，准备开始版本控制。 结果：创建一个空的Git仓库，Git会开始跟踪该目录中的所有文件。 2. git add 文件名 作用：将指定的文件添加到Git的暂存区。 解释：git add 命令告诉Git哪些文件需要纳入版本控制的范围。文件名 是要添加的具体文件名称。可以是一个文件、多个文件或者一个目录。例如：git add README.md。 结果：文件被添加到暂存区，准备进行提交。 3. git commit -m \u0026quot;提交说明/注释\u0026quot; 作用：将暂存区的文件提交到本地仓库，并附带一条提交信息。 解释：git commit 命令将已经添加到暂存区的文件（通过 git add）提交到本地仓库。-m 后面跟的是这次提交的描述信息，通常是简短明了的说明，告诉别人或自己这次提交的目的。 结果：文件提交到本地Git仓库，版本历史中加入了这次提交。 4. git push origin 分支名 作用：将本地仓库的指定分支推送到远程仓库。 解释：git push 命令将本地分支的更改推送到远程仓库。origin 是远程仓库的默认名称，分支名 是你要推送的本地分支名称。例如：git push origin main 会将本地的 main 分支推送到远程仓库。 结果：将本地分支的更改推送到远程仓库，并同步远程分支。 5. git clone 仓库地址 作用：克隆一个远程Git仓库到本地。 解释：git clone 命令用来复制一个远程仓库的完整副本，包括所有的历史记录和分支。仓库地址 是远程仓库的URL（例如：https://github.com/username/repo.git）。 结果：在本地创建一个与远程仓库相同的目录，并将远程仓库的内容复制过来。 6. git status 作用：查看工作区和暂存区的状态。 解释：git status 命令会显示当前工作区和暂存区的状态。它会列出哪些文件有更改、哪些文件已加入暂存区、哪些文件尚未跟踪等信息。它不会对仓库做出任何修改。 结果：显示当前文件的修改状态，帮助用户了解哪些文件已经修改、哪些文件还没有提交。 7. git log 作用：查看提交历史。 解释：git log 命令显示Git仓库的提交历史，包括每次提交的提交ID、提交作者、提交时间、提交信息等。如果加上参数 --oneline，会以简洁的方式显示每个提交的ID和说明。 结果：输出当前分支的提交历史记录，帮助了解项目的历史进展。 8. git branch 分支名 作用：创建一个新的分支。 解释：git branch 命令用于列出、创建或删除分支。分支名 是新分支的名称。使用此命令创建一个新分支，但不会自动切换到该分支。 结果：创建一个新的分支，并且不会切换到该分支。 9. git checkout 分支名 作用：切换到指定的分支。 解释：git checkout 命令用于切换到指定的分支。你可以用它来切换到已经存在的其他分支，或者用它来恢复文件到某个特定的版本。 结果：切换到指定的分支。如果目标分支不存在，需要先创建它。 10. git merge 分支名 作用：将指定分支的更改合并到当前分支。 解释：git merge 命令将指定的分支合并到当前分支。例如，如果你正在 main 分支上，并且要将 feature 分支的更改合并进来，可以使用 git merge feature。 结果：将目标分支的所有更改合并到当前分支，可能会出现冲突，需要手动解决。 11. git pull origin 分支名 作用：从远程仓库拉取指定分支的更改并合并到当前分支。 解释：git pull 命令用于从远程仓库拉取最新的代码并自动与当前分支合并。origin 是远程仓库的名称，分支名 是你要拉取的分支。如果当前分支与远程分支存在冲突，Git会提示你手动解决。 结果：将远程仓库的指定分支拉取到本地，并自动进行合并。 总结： 这些命令是Git日常使用中的基础命令，帮助管理代码的版本控制、分支管理、远程仓库同步等。理解和熟练使用这些命令是成为Git高手的基础。如果你有特定的操作或想要进一步了解某个命令的细节，随时告诉我！\n搭建一个仓库并于远程仓库连接的过程：（以github为例）\ngit init 创建本地仓库，并在GitHub或Gitee上面创建云端仓库 git add README.md 创建一个说明文件 git commit -m “first commit”提交到本地仓库，并给予说明 git branch -M main 创建主体根系 git remote add add origin 仓库地址 与远程仓库进行连接 git push -u origin main 把主支推送到云端 这段代码是在初始化一个新的Git仓库并将其推送到GitHub上的远程仓库。下面是对每行代码的详细解读：\n1. echo \u0026quot;# new\u0026quot; \u0026gt;\u0026gt; README.md 作用：这行命令会将文本 # new 写入到 README.md 文件中。 解释：echo 命令用于打印文本，\u0026gt;\u0026gt; 用于将输出追加到文件末尾。如果 README.md 文件不存在，它会创建一个新的文件并将文本写入其中。 结果：README.md 文件的内容将是 # new，通常用于描述项目的标题或名称。 2. git init 作用：初始化一个新的Git仓库。 解释：此命令会在当前目录下创建一个 .git 目录，这个目录用来存储所有Git跟踪的信息，包括版本历史、配置等。执行此命令后，该目录会被标记为一个Git仓库。 结果：创建一个空的Git仓库，准备进行版本控制。 3. git add README.md 作用：将 README.md 文件添加到Git暂存区。 解释：git add 命令将指定的文件加入暂存区（Staging Area），即告诉Git你已经修改了这个文件，准备将它提交到版本历史中。在这个命令中，README.md 是要添加到暂存区的文件。 结果：README.md 文件准备好提交。 4. git commit -m \u0026quot;first commit\u0026quot; 作用：提交暂存区的文件并附加提交信息。 解释：git commit 命令会将暂存区的文件（即已经用 git add 添加的文件）提交到本地Git仓库，并记录一个提交信息。-m 后面的 \u0026quot;first commit\u0026quot; 是你为这个提交写的描述信息，通常用于简短描述这次提交的目的或更改。 结果：README.md 文件被提交到本地Git仓库，且提交信息为 first commit。 5. git branch -M main 作用：将当前分支重命名为 main。 解释：默认情况下，Git会创建一个名为 master 的分支。git branch -M main 命令会将当前分支重命名为 main。-M 参数表示强制重命名，即使目标名称已存在。 结果：将当前分支的名称更改为 main。 6. git remote add origin https://github.com/tanjiangweng/new.git 作用：添加远程仓库。 解释：git remote add origin 命令将一个远程Git仓库添加到本地仓库的配置中。origin 是远程仓库的默认名称，后面的URL https://github.com/tanjiangweng/new.git 是远程仓库的地址。该命令让Git知道要将代码推送到这个GitHub上的仓库。 结果：将远程仓库链接到本地仓库，使得本地的更改可以推送到远程仓库。 7. git push -u origin main 作用：将本地 main 分支的提交推送到远程仓库。 解释：git push 命令将本地的提交推送到远程仓库，-u 参数会将本地的 main 分支与远程仓库的 main 分支关联起来，这样以后你可以直接使用 git push 或 git pull 命令，而不需要每次都指定远程分支。origin 是远程仓库的名称，main 是你要推送的本地分支。 结果：将本地 main 分支的提交推送到 GitHub 上的远程仓库，并建立起本地分支与远程分支的关联。 总结： 这段代码的整体流程是：首先创建一个新的Git仓库并添加文件，提交到本地Git仓库，然后将本地仓库与GitHub上的远程仓库关联，最后将代码推送到远程仓库。\n使用可视化git管理软件sourcetree 暂存改动文件 在文件状态里面写入说明，提交，再推送 若想恢复删除文件，可右键强行合并 SourceTree 是一个由 Atlassian 提供的免费的 Git 和 Mercurial 图形化客户端，专门为开发者提供一个简洁而直观的方式来管理版本控制。下面是关于 SourceTree 的使用教程，适用于 Git 操作。\n1. 下载与安装 SourceTree 前往 SourceTree 官方网站：https://www.sourcetreeapp.com/，选择适合操作系统（Windows/macOS）的版本进行下载并安装。 安装过程中会提示你是否安装 Git（如果你系统中没有安装 Git），选择安装即可。 2. 配置 SourceTree 首次启动\n：启动 SourceTree 后，会提示你配置 Git 和 Mercurial 的相关设置。\n输入你的 姓名 和 电子邮件，这些信息会出现在你提交的记录中。 你也可以选择连接到你的 GitHub、Bitbucket 或 GitLab 帐户，便于直接与远程仓库进行交互。 3. 创建一个新仓库 新建本地仓库\n：\n点击 SourceTree 界面左上方的 \u0026ldquo;新建\u0026rdquo; 按钮。 在弹出的对话框中选择 \u0026ldquo;创建本地仓库\u0026rdquo;。 选择你希望创建仓库的目录，点击 \u0026ldquo;创建\u0026rdquo;。 这会在指定的文件夹中创建一个 Git 仓库，SourceTree 会自动识别并显示该仓库。\n4. 克隆远程仓库 从 GitHub、Bitbucket 等仓库克隆\n：\n点击 SourceTree 界面左上方的 \u0026ldquo;克隆 / 新建\u0026rdquo; 按钮。 在弹出窗口的 \u0026ldquo;克隆\u0026rdquo; 选项卡中，输入远程仓库的 URL，可以从 GitHub、GitLab 等仓库网站获取 URL。 选择一个本地文件夹作为目标位置，并点击 \u0026ldquo;克隆\u0026rdquo;。 SourceTree 会自动下载仓库内容并为你创建本地仓库副本。\n5. 基本操作 查看当前工作区和暂存区： SourceTree 会显示工作区和暂存区的文件变更。已修改的文件会列出，未暂存的文件会标记为 \u0026ldquo;未暂存\u0026rdquo;。 你可以点击文件右键，选择 \u0026ldquo;暂存\u0026rdquo;，将文件移入暂存区，或者 \u0026ldquo;丢弃更改\u0026rdquo; 来撤销文件修改。 提交修改（Commit）： 在暂存区查看你想要提交的文件。勾选要提交的文件。 在 \u0026ldquo;提交\u0026rdquo; 窗口中，输入提交信息。 点击 \u0026ldquo;提交\u0026rdquo; 按钮完成提交操作。 查看提交历史（Log）： 点击 SourceTree 中的 \u0026ldquo;日志/历史\u0026rdquo; 选项卡，查看提交历史。你可以看到每个提交的详细信息，包括提交信息、作者、时间等。 可以通过 \u0026ldquo;查看文件\u0026rdquo; 查看某个提交中某个文件的修改。 切换分支（Branch）： 在左侧的 \u0026ldquo;分支\u0026rdquo; 面板中，右键点击某个分支并选择 \u0026ldquo;切换到该分支\u0026rdquo;。 你也可以选择 \u0026ldquo;新建分支\u0026rdquo; 来创建一个新分支。 6. 与远程仓库交互 拉取远程更改（Pull）\n：\n点击 \u0026ldquo;拉取\u0026rdquo; 按钮（在界面顶部），从远程仓库拉取最新的更改并合并到当前分支。 推送本地更改（Push）\n：\n点击 \u0026ldquo;推送\u0026rdquo; 按钮，将你本地的提交推送到远程仓库。 你可以选择推送特定的分支，或者推送所有分支。 7. 合并分支（Merge） 在左侧面板中，选择要合并的目标分支（例如，你想将一个功能分支合并到主分支）。 右键点击目标分支，选择 \u0026ldquo;合并\u0026rdquo;。 如果存在冲突，SourceTree 会提示你解决冲突。你可以手动编辑冲突的文件，解决冲突后重新提交。 8. 处理冲突（Conflict） 如果你在合并、拉取或推送时遇到冲突，SourceTree 会通过红色警告提示你。 在 \u0026ldquo;冲突\u0026rdquo; 面板中，你可以查看冲突的文件，点击右键选择 \u0026ldquo;解决冲突\u0026rdquo;。 SourceTree 会显示冲突文件的三个部分：本地版本、远程版本和合并结果。你可以手动选择保留哪个版本或手动合并这些版本。 9. 标签（Tag）管理 创建标签：你可以在某个提交上打上标签，用于标记特定的版本（比如发布版本）。点击 \u0026ldquo;创建标签\u0026rdquo; 按钮并输入标签名。 查看标签：点击 \u0026ldquo;标签\u0026rdquo; 面板查看仓库中已有的标签。 10. 查看变更（Diff） 在 \u0026ldquo;差异\u0026rdquo; 面板中，查看你所做的修改。 可以选择 \u0026ldquo;查看文件\u0026rdquo;，来查看具体的代码行变动。 11. 设置和个性化 你可以通过 SourceTree 的 设置 页面自定义工具的行为，包括界面主题、自动刷新等。 例如，\u0026ldquo;偏好设置\u0026rdquo; \u0026gt; \u0026ldquo;Git\u0026rdquo; 可以设置默认 Git 执行路径或配置。 ","date":"2025-01-27T20:15:45+08:00","permalink":"https://tanjiangweng.github.io/p/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","title":"Git学习笔记"},{"content":"Markdown 基本语法 Markdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出 HTML、PDF 以及本身的 .md 格式的文件。因简洁、高效、易读、易写，Markdown被大量使用，如Github、Wikipedia、简书等。\n在线体验一下 Markdown在线编辑器 (opens new window)。\n千万不要被「标记」、「语言」吓到，Markdown的语法十分简单，常用的标记符号不超过十个，用于日常写作记录绰绰有余，不到半小时就能完全掌握。\n就是这十个不到的标记符号，却能让人优雅地沉浸式记录，专注内容而不是纠结排版，达到「心中无尘，码字入神」的境界。\n让我们从 Markdown 标题语法 (opens new window)开始学习吧。\n1.Markdown 标题语法 要创建标题，请在单词或短语前面添加井号#) 。# 的数量代表了标题的级别。例如，添加三个 # 表示创建一个三级标题 (\u0026lt;h3\u0026gt;) (例如：### My Header)。或者用ctrl+数字表示标题级别 这个符号可实现高亮\nMarkdown语法 HTML 预览效果 # Heading level 1 \u0026lt;h1\u0026gt;Heading level 1\u0026lt;/h1\u0026gt; Heading level 1 ## Heading level 2 \u0026lt;h2\u0026gt;Heading level 2\u0026lt;/h2\u0026gt; Heading level 2 ### Heading level 3 \u0026lt;h3\u0026gt;Heading level 3\u0026lt;/h3\u0026gt; Heading level 3 #### Heading level 4 \u0026lt;h4\u0026gt;Heading level 4\u0026lt;/h4\u0026gt; Heading level 4 ##### Heading level 5 \u0026lt;h5\u0026gt;Heading level 5\u0026lt;/h5\u0026gt; Heading level 5 ###### Heading level 6 \u0026lt;h6\u0026gt;Heading level 6\u0026lt;/h6\u0026gt; Heading level 6 一级标题 二级标题 三级标题 四级标题 五级标题 六级标题 #可选语法 还可以在文本下方添加任意数量的 == 号来标识一级标题，或者 \u0026ndash; 号来标识二级标题。(这里使用时无效)\nMarkdown语法 HTML 预览效果 Heading level 1=============== \u0026lt;h1\u0026gt;Heading level 1\u0026lt;/h1\u0026gt; Heading level 1 Heading level 2--------------- \u0026lt;h2\u0026gt;Heading level 2\u0026lt;/h2\u0026gt; Heading level 2 #最佳实践 不同的 Markdown 应用程序处理 # 和标题之间的空格方式并不一致。为了兼容考虑，请用一个空格在 # 和标题之间进行分隔。\n✅ Do this ❌ Don\u0026rsquo;t do this # Here's a Heading #Here's a Heading 2.Markdown 段落 要创建段落，请使用空白行将一行或多行文本进行分隔。\nMarkdown语法 HTML 预览效果 I really like using Markdown.I think I'll use it to format all of my documents from now on. \u0026lt;p\u0026gt;I really like using Markdown.\u0026lt;/p\u0026gt;\u0026lt;p\u0026gt;I think I'll use it to format all of my documents from now on.\u0026lt;/p\u0026gt; I really like using Markdown.I think I\u0026rsquo;ll use it to format all of my documents from now on. #段落（Paragraph）用法的最佳实 不要用空格（spaces）或制表符（ tabs）缩进段落。\n✅ Do this ❌ Don\u0026rsquo;t do this Don't put tabs or spaces in front of your paragraphs.Keep lines left-aligned like this. This can result in unexpected formatting problems. Don't add tabs or spaces in front of paragraphs. 3.Markdown 换行语法 在一行的末尾添加两个或多个空格，然后按回车键,即可创建一个换行(\u0026lt;br\u0026gt;)。(这里直接使用enter)\nMarkdown语法 HTML 预览效果 This is the first line. And this is the second line. \u0026lt;p\u0026gt;This is the first line.\u0026lt;br\u0026gt;And this is the second line.\u0026lt;/p\u0026gt; This is the first line. And this is the second line. #换行（Line Break）用法的最佳实践 几乎每个 Markdown 应用程序都支持两个或多个空格进行换行，称为 结尾空格（trailing whitespace) 的方式，但这是有争议的，因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个空格。由于这个原因，你可能要使用除结尾空格以外的其它方式来换行。幸运的是，几乎每个 Markdown 应用程序都支持另一种换行方式：HTML 的 \u0026lt;br\u0026gt; 标签。\n为了兼容性，请在行尾添加“结尾空格”或 HTML 的 \u0026lt;br\u0026gt; 标签来实现换行。\n还有两种其他方式我并不推荐使用。CommonMark 和其它几种轻量级标记语言支持在行尾添加反斜杠 (\\) 的方式实现换行，但是并非所有 Markdown 应用程序都支持此种方式，因此从兼容性的角度来看，不推荐使用。并且至少有两种轻量级标记语言支持无须在行尾添加任何内容，只须键入回车键（return）即可实现换行。\n✅ Do this ❌ Don\u0026rsquo;t do this First line with two spaces after. And the next line.First line with the HTML tag after.\u0026lt;br\u0026gt;And the next line. First line with a backslash after.\\And the next line.First line with nothing after.And the next line. 4.Markdown 强调语法 通过将文本设置为粗体或斜体来强调其重要性。\n#粗体（Bold） 要加粗文本，请在单词或短语的前后各添加两个星号（asterisks）或下划线（underscores）。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号（asterisks）。\nMarkdown语法 HTML 预览效果 I just love **bold text**. I just love \u0026lt;strong\u0026gt;bold text\u0026lt;/strong\u0026gt;. I just love bold text. I just love __bold text__. I just love \u0026lt;strong\u0026gt;bold text\u0026lt;/strong\u0026gt;. I just love bold text. Love**is**bold Love\u0026lt;strong\u0026gt;is\u0026lt;/strong\u0026gt;bold Loveisbold 加粗\n加粗\n#粗体（Bold）用法最佳实践 Markdown 应用程序在如何处理单词或短语中间的下划线上并不一致。为兼容考虑，在单词或短语中间部分加粗的话，请使用星号（asterisks）。\n✅ Do this ❌ Don\u0026rsquo;t do this Love**is**bold Love__is__bold Love__is__bold\nLove**is**blod\n#斜体（Italic） 要用斜体显示文本，请在单词或短语前后添加一个星号（asterisk）或下划线（underscore）。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。\nMarkdown语法 HTML 预览效果 Italicized text is the *cat's meow*. Italicized text is the \u0026lt;em\u0026gt;cat's meow\u0026lt;/em\u0026gt;. Italicized text is the cat’s meow. Italicized text is the _cat's meow_. Italicized text is the \u0026lt;em\u0026gt;cat's meow\u0026lt;/em\u0026gt;. Italicized text is the cat’s meow. A*cat*meow A\u0026lt;em\u0026gt;cat\u0026lt;/em\u0026gt;meow Acatmeow *斜体*\n``斜体`\n#斜体（Italic）用法的最佳实践 要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。\n✅ Do this ❌ Don\u0026rsquo;t do this A*cat*meow A_cat_meow #粗体（Bold）和斜体（Italic） 要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。\nMarkdown语法 HTML 预览效果 This text is ***really important***. This text is \u0026lt;strong\u0026gt;\u0026lt;em\u0026gt;really important\u0026lt;/em\u0026gt;\u0026lt;/strong\u0026gt;. This text is *really important*. This text is ___really important___. This text is \u0026lt;strong\u0026gt;\u0026lt;em\u0026gt;really important\u0026lt;/em\u0026gt;\u0026lt;/strong\u0026gt;. This text is *really important*. This text is __*really important*__. This text is \u0026lt;strong\u0026gt;\u0026lt;em\u0026gt;really important\u0026lt;/em\u0026gt;\u0026lt;/strong\u0026gt;. This text is *really important*. This text is **_really important_**. This text is \u0026lt;strong\u0026gt;\u0026lt;em\u0026gt;really important\u0026lt;/em\u0026gt;\u0026lt;/strong\u0026gt;. This text is *really important*. This is really***very***important text. This is really\u0026lt;strong\u0026gt;\u0026lt;em\u0026gt;very\u0026lt;/em\u0026gt;\u0026lt;/strong\u0026gt;important text. This is really***very***important text. 使用三个**实现加粗和斜体\n你好\n#粗体（Bold）和斜体（Italic）用法的最佳实践 Markdown 应用程序在处理单词或短语中间添加的下划线上并不一致。为了实现兼容性，请使用星号将单词或短语的中间部分加粗并以斜体显示，以示重要。\n✅ Do this ❌ Don\u0026rsquo;t do this This is really***very***important text. This is really___very___important text. 5.Markdown 引用语法 ==要创建块引用，请在段落前添加一个 \u0026gt; 符号==。\n1 \u0026gt; Dorothy followed her through many of the beautiful rooms in her castle. 渲染效果如下所示：\n==Dorothy followed her through many of the beautiful rooms in her cast==\n以下是我的实操\n#多个段落的块引用 块引用可以包含多个段落。为段落之间的空白行添加一个 \u0026gt; 符号。\n1 2 3 \u0026gt; Dorothy followed her through many of the beautiful rooms in her castle. \u0026gt; \u0026gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood. 渲染效果如下：\nDorothy followed her through many of the beautiful rooms in her castle.\nThe Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n#嵌套块引用 块引用可以嵌套。在要嵌套的段落前添加一个 \u0026gt;\u0026gt; 符号。\n1 2 3 \u0026gt; Dorothy followed her through many of the beautiful rooms in her castle. \u0026gt; \u0026gt;\u0026gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood. 渲染效果如下：\nDorothy followed her through many of the beautiful rooms in her castle.\nThe Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n#带有其它元素的块引用 块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。\n1 2 3 4 5 6 \u0026gt; #### The quarterly results look great! \u0026gt; \u0026gt; - Revenue was off the chart. \u0026gt; - Profits were higher than ever. \u0026gt; \u0026gt; *Everything* is going according to **plan**. 渲染效果如下：\nThe quarterly results look great! Revenue was off the chart. Profits were higher than ever. Everything is going according to plan.\n6.Markdown 列表语法 可以将多个条目组织成有序或无序列表。\n#有序列表 要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。\nMarkdown语法 HTML 预览效果 1. First item2. Second item3. Third item4. Fourth item \u0026lt;ol\u0026gt;\u0026lt;li\u0026gt;First item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Second item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Third item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Fourth item\u0026lt;/li\u0026gt;\u0026lt;/ol\u0026gt; First itemSecond itemThird itemFourth item 1. First item1. Second item1. Third item1. Fourth item \u0026lt;ol\u0026gt;\u0026lt;li\u0026gt;First item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Second item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Third item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Fourth item\u0026lt;/li\u0026gt;\u0026lt;/ol\u0026gt; First itemSecond itemThird itemFourth item 1. First item8. Second item3. Third item5. Fourth item \u0026lt;ol\u0026gt;\u0026lt;li\u0026gt;First item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Second item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Third item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Fourth item\u0026lt;/li\u0026gt;\u0026lt;/ol\u0026gt; First itemSecond itemThird itemFourth item 1. First item2. Second item3. Third item 1. Indented item 2. Indented item4. Fourth item \u0026lt;ol\u0026gt;\u0026lt;li\u0026gt;First item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Second item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Third item\u0026lt;ol\u0026gt;\u0026lt;li\u0026gt;Indented item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Indented item\u0026lt;/li\u0026gt;\u0026lt;/ol\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Fourth item\u0026lt;/li\u0026gt;\u0026lt;/ol\u0026gt; First itemSecond itemThird itemIndented itemIndented itemFourth item #有序列表最佳实践 CommonMark and a few other lightweight markup languages let you use a parenthesis ()) as a delimiter (e.g., 1) First item), but not all Markdown applications support this, so it isn’t a great option from a compatibility perspective. For compatibility, use periods only.\n✅ Do this ❌ Don\u0026rsquo;t do this 1. First item2. Second item 1) First item2) Second item #无序列表 要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+) 。缩进一个或多个列表项可创建嵌套列表。\nMarkdown语法 HTML 预览效果 - First item- Second item- Third item- Fourth item \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;First item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Second item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Third item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Fourth item\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt; First itemSecond itemThird itemFourth item * First item* Second item* Third item* Fourth item \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;First item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Second item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Third item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Fourth item\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt; First itemSecond itemThird itemFourth item + First item+ Second item+ Third item+ Fourth item \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;First item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Second item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Third item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Fourth item\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt; First itemSecond itemThird itemFourth item - First item- Second item- Third item - Indented item - Indented item- Fourth item \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;First item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Second item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Third item\u0026lt;ul\u0026gt;\u0026lt;li\u0026gt;Indented item\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Indented item\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;li\u0026gt;Fourth item\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt; First itemSecond itemThird itemIndented itemIndented itemFourth item #无序列表最佳实践 Markdown applications don’t agree on how to handle different delimiters in the same list. For compatibility, don\u0026rsquo;t mix and match delimiters in the same list — pick one and stick with it.\n✅ Do this ❌ Don\u0026rsquo;t do this - First item- Second item- Third item- Fourth item + First item* Second item- Third item+ Fourth item #在列表中嵌套其他元素 要在保留列表连续性的同时在列表中添加另一种元素，请将该元素缩进四个空格或一个制表符，如下例所示：\n#段落 1 2 3 4 5 6 * This is the first list item. * Here\u0026#39;s the second list item. I need to add another paragraph below the second list item. * And here\u0026#39;s the third list item. 渲染效果如下：\nThis is the first list item.\nHere\u0026rsquo;s the second list item.\nI need to add another paragraph below the second list item.\nAnd here\u0026rsquo;s the third list item.\n#引用块 1 2 3 4 5 6 * This is the first list item. * Here\u0026#39;s the second list item. \u0026gt; A blockquote would look great below the second list item. * And here\u0026#39;s the third list item. 渲染效果如下：\nThis is the first list item.\nHere\u0026rsquo;s the second list item.\nA blockquote would look great below the second list item.\nAnd here\u0026rsquo;s the third list item.\n#代码块 代码块通常采用四个空格或一个制表符缩进。当它们被放在列表中时，请将它们缩进八个空格或两个制表符。\n1 2 3 4 5 6 7 8 9 1. Open the file. 2. Find the following code block on line 21: \u0026amp;lt;html\u0026gt; \u0026amp;lt;head\u0026gt; \u0026amp;lt;title\u0026gt;Test\u0026amp;lt;/title\u0026gt; \u0026amp;lt;/head\u0026gt; 3. Update the title to match the name of your website. 渲染效果如下：\nOpen the file.\nFind the following code block on line 21:\n1 2 3 4 \u0026amp;lt;html\u0026gt; \u0026amp;lt;head\u0026gt; \u0026amp;lt;title\u0026gt;Test\u0026amp;lt;/title\u0026gt; \u0026amp;lt;/head\u0026gt; Update the title to match the name of your website.\n#图片 1 2 3 4 5 6 1. Open the file containing the Linux mascot. 2. Marvel at its beauty. ![Tux, the Linux mascot](/assets/images/tux.png) 3. Close the file. 渲染效果如下：\nOpen the file containing the Linux mascot.\nMarvel at its beauty.\nClose the file.\n#列表 You can nest an unordered list in an ordered list, or vice versa.\n1 2 3 4 5 6 1. First item 2. Second item 3. Third item - Indented item - Indented item 4. Fourth item 渲染效果如下：\nFirst item Second item Third item Indented item Indented item Fourth item 7.Markdown 代码语法 要将单词或短语表示为代码，请将其包裹在反引号 (```) 中。\nMarkdown语法 HTML 预览效果 At the command prompt, type nano. At the command prompt, type \u0026lt;code\u0026gt;nano\u0026lt;/code\u0026gt;. At the command prompt, type nano. #转义反引号 如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(````)中。\nMarkdown语法 HTML 预览效果 Use `code` in your Markdown file. \u0026lt;code\u0026gt;Use code in your Markdown file.\u0026lt;/code\u0026gt; Use code in your Markdown file. #代码块 要创建代码块，请将代码块的每一行缩进至少四个空格或一个制表符。\n1 2 3 4 \u0026amp;lt;html\u0026gt; \u0026amp;lt;head\u0026gt; \u0026amp;lt;/head\u0026gt; \u0026amp;lt;/html\u0026gt; 渲染效果如下：\n1 2 3 4 \u0026amp;lt;html\u0026gt; \u0026amp;lt;head\u0026gt; \u0026amp;lt;/head\u0026gt; \u0026amp;lt;/html\u0026gt; Note: 要创建不用缩进的代码块，请使用 围栏式代码块（fenced code blocks）.\n8.Markdown 分隔线语法 要创建分隔线，请在单独一行上使用三个或多个星号 (***)、破折号 (---) 或下划线 (___) ，并且不能包含其他内容。\n1 2 3 4 5 *** --- _________________ 以上三个分隔线的渲染效果看起来都一样：\n#分隔线（Horizontal Rule）用法最佳实践 为了兼容性，请在分隔线的前后均添加空白行。\n✅ Do this ❌ Don\u0026rsquo;t do this Try to put a blank line before...---...and after a horizontal rule. Without blank lines, this would be a heading.---Don't do this! 9.Markdown 链接语法 链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。\n超链接Markdown语法代码：[超链接显示名](超链接地址 \u0026quot;超链接title\u0026quot;)\n对应的HTML代码：\u0026lt;a href=\u0026quot;超链接地址\u0026quot; title=\u0026quot;超链接title\u0026quot;\u0026gt;超链接显示名\u0026lt;/a\u0026gt;\n1 这是一个链接 [Markdown语法](https://markdown.com.cn)。 渲染效果如下：\n这是一个链接 Markdown语法 (opens new window)。\n#给链接增加 Title 链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。\n1 这是一个链接 [Markdown语法](https://markdown.com.cn \u0026#34;最好的markdown教程\u0026#34;)。 渲染效果如下：\n这是一个链接 Markdown语法 (opens new window)。\n#网址和Email地址 使用尖括号可以很方便地把URL或者email地址变成可点击的链接。\n1 2 \u0026lt;https://markdown.com.cn\u0026gt; \u0026lt;fake@example.com\u0026gt; 渲染效果如下：\nhttps://markdown.com.cn(opens new window) fake@example.com\n#带格式化的链接 强调 链接, 在链接语法前后增加星号。 要将链接表示为代码，请在方括号中添加反引号。\n1 2 3 I love supporting the **[EFF](https://eff.org)**. This is the *[Markdown Guide](https://www.markdownguide.org)*. See the section on [`code`](#code). 渲染效果如下：\nI love supporting the EFF (opens new window). This is the Markdown Guide (opens new window). See the section on code.\n#引用类型链接 引用样式链接是一种特殊的链接，它使URL在Markdown中更易于显示和阅读。参考样式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读。\n#链接的第一部分格式 引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。\n尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。\n以下示例格式对于链接的第一部分效果相同：\n[hobbit-hole][1] [hobbit-hole] [1] #链接的第二部分格式 引用类型链接的第二部分使用以下属性设置格式：\n放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如[label]:）。 链接的URL，可以选择将其括在尖括号中。 链接的可选标题，可以将其括在双引号，单引号或括号中。 以下示例格式对于链接的第二部分效果相同：\n[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle [1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle \u0026quot;Hobbit lifestyles\u0026quot; [1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle 'Hobbit lifestyles' [1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles) [1]: \u0026lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle\u0026gt; \u0026quot;Hobbit lifestyles\u0026quot; [1]: \u0026lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle\u0026gt; 'Hobbit lifestyles' [1]: \u0026lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle\u0026gt; (Hobbit lifestyles) 可以将链接的第二部分放在Markdown文档中的任何位置。有些人将它们放在出现的段落之后，有些人则将它们放在文档的末尾（例如尾注或脚注）。\n#链接最佳实践 不同的 Markdown 应用程序处理URL中间的空格方式不一样。为了兼容性，请尽量使用%20代替空格。\n✅ Do this ❌ Don\u0026rsquo;t do this [link](https://www.example.com/my%20great%20page) [link](https://www.example.com/my great page) 10.Markdown 图片语法 要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。\n插入图片Markdown语法代码：![图片alt](图片链接 \u0026quot;图片title\u0026quot;)。\n对应的HTML代码：\u0026lt;img src=\u0026quot;图片链接\u0026quot; alt=\u0026quot;图片alt\u0026quot; title=\u0026quot;图片title\u0026quot;\u0026gt;\n1 ![这是图片](/assets/img/philly-magic-garden.jpg \u0026#34;Magic Gardens\u0026#34;) 渲染效果如下：\n#链接图片 给图片增加链接，请将图像的Markdown 括在方括号中，然后将链接添加在圆括号中。\n1 [![沙漠中的岩石图片](/assets/img/shiprock.jpg \u0026#34;Shiprock\u0026#34;)](https://markdown.com.cn) 渲染效果如下：\n11.Markdown 转义字符语法 要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符 \\ 。\n1 \\* Without the backslash, this would be a bullet in an unordered list. 渲染效果如下：\n* Without the backslash, this would be a bullet in an unordered list.\n#可做转义的字符 以下列出的字符都可以通过使用反斜杠字符从而达到转义目的。\nCharacter Name \\ backslash ` backtick (see also escaping backticks in code) * asterisk _ underscore { } curly braces [ ] brackets ( ) parentheses # pound sign + plus sign - minus sign (hyphen) . dot ! exclamation mark | pipe (see also escaping pipe in tables) #特殊字符自动转义 在 HTML 文件中，有两个字符需要特殊处理： \u0026lt; 和 \u0026amp; 。 \u0026lt; 符号用于起始标签，\u0026amp; 符号则用于标记 HTML 实体，如果你只是想要使用这些符号，你必须要使用实体的形式，像是 \u0026lt; 和 \u0026amp;。\n\u0026amp; 符号其实很容易让写作网页文件的人感到困扰，如果你要打「AT\u0026amp;T」 ，你必须要写成「AT\u0026amp;T」 ，还得转换网址内的 \u0026amp; 符号，如果你要链接到：\n1 http://images.google.com/images?num=30\u0026amp;q=larry+bird 你必须要把网址转成：\n1 http://images.google.com/images?num=30\u0026amp;amp;q=larry+bird 才能放到链接标签的 href 属性里。不用说也知道这很容易忘记，这也可能是 HTML 标准检查所检查到的错误中，数量最多的。\nMarkdown 允许你直接使用这些符号，它帮你自动转义字符。如果你使用 \u0026amp; 符号的作为 HTML 实体的一部分，那么它不会被转换，而在其它情况下，它则会被转换成 \u0026amp;。所以你如果要在文件中插入一个著作权的符号，你可以这样写：\n1 \u0026amp;copy; Markdown 将不会对这段文字做修改，但是如果你这样写：\n1 AT\u0026amp;T Markdown 就会将它转为：\n1 AT\u0026amp;amp;T 类似的状况也会发生在 \u0026lt; 符号上，因为 Markdown 支持 行内 HTML ，如果你使用 \u0026lt; 符号作为 HTML 标签的分隔符，那 Markdown 也不会对它做任何转换，但是如果你是写：\n1 4 \u0026lt; 5 Markdown 将会把它转换为：\n1 4 \u0026amp;lt; 5 需要特别注意的是，在 Markdown 的块级元素和内联元素中， \u0026lt; 和 \u0026amp; 两个符号都会被自动转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML。（在 HTML 语法中，你要手动把所有的 \u0026lt; 和 \u0026amp; 都转换为 HTML 实体。）\n12.Markdown 内嵌 HTML 标签 对于 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 本身。如需使用 HTML，不需要额外标注这是 HTML 或是 Markdown，只需 HTML 标签添加到 Markdown 文本中即可。\n#行级內联标签 HTML 的行级內联标签如 \u0026lt;span\u0026gt;、\u0026lt;cite\u0026gt;、\u0026lt;del\u0026gt; 不受限制，可以在 Markdown 的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用 Markdown 格式，而采用 HTML 标签来格式化。例如：如果比较喜欢 HTML 的 \u0026lt;a\u0026gt; 或 \u0026lt;img\u0026gt; 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图片语法。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用 HTML 标签更方便些。\nHTML 行级內联标签和区块标签不同，在內联标签的范围内， Markdown 的语法是可以解析的。\n1 This **word** is bold. This \u0026lt;em\u0026gt;word\u0026lt;/em\u0026gt; is italic. 渲染效果如下:\nThis word is bold. This word is italic.\n#区块标签 区块元素──比如 \u0026lt;div\u0026gt;、\u0026lt;table\u0026gt;、\u0026lt;pre\u0026gt;、\u0026lt;p\u0026gt; 等标签，必须在前后加上空行，以便于内容区分。而且这些元素的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown 会自动识别这区块元素，避免在区块标签前后加上没有必要的 \u0026lt;p\u0026gt; 标签。\n例如，在 Markdown 文件里加上一段 HTML 表格：\n1 2 3 4 5 6 7 8 9 This is a regular paragraph. \u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Foo\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; This is another regular paragraph. 请注意，Markdown 语法在 HTML 区块标签中将不会被进行处理。例如，你无法在 HTML 区块内使用 Markdown 形式的*强调*。\n#HTML 用法最佳实践 出于安全原因，并非所有 Markdown 应用程序都支持在 Markdown 文档中添加 HTML。如有疑问，请查看相应 Markdown 应用程序的手册。某些应用程序只支持 HTML 标签的子集。\n对于 HTML 的块级元素 \u0026lt;div\u0026gt;、\u0026lt;table\u0026gt;、\u0026lt;pre\u0026gt; 和 \u0026lt;p\u0026gt;，请在其前后使用空行（blank lines）与其它内容进行分隔。尽量不要使用制表符（tabs）或空格（spaces）对 HTML 标签做缩进，否则将影响格式。\n在 HTML 块级标签内不能使用 Markdown 语法。例如 \u0026lt;p\u0026gt;italic and **bold**\u0026lt;/p\u0026gt; 将不起作用。\n","date":"2025-01-20T10:51:47+08:00","permalink":"https://tanjiangweng.github.io/p/markdown%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","title":"Markdown基础语法"},{"content":"hello world 你好啊\n","date":"2025-01-19T13:18:18+08:00","permalink":"https://tanjiangweng.github.io/p/myfirstblog/","title":"Myfirstblog"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://tanjiangweng.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu4699868770670889127.jpg","permalink":"https://tanjiangweng.github.io/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://tanjiangweng.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu6307248181568134095.jpg","permalink":"https://tanjiangweng.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://tanjiangweng.github.io/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu10664154974910995856.jpg","permalink":"https://tanjiangweng.github.io/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://tanjiangweng.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://tanjiangweng.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu5876398126655421130.jpg","permalink":"https://tanjiangweng.github.io/p/emoji-support/","title":"Emoji Support"}]